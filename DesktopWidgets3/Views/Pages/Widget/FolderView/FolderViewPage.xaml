<files:BaseLayoutPage
    x:Class="DesktopWidgets3.Views.Pages.Widget.FolderViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:files="using:Files.App.Views.Layouts"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:widget="using:DesktopWidgets3.ViewModels.Pages.Widget"
    xmlns:behaviors="using:DesktopWidgets3.Behaviors"
    xmlns:models="using:Files.App.Utils"
    d:DataContext="{d:DesignInstance Type=widget:FolderViewViewModel}"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    NavigationCacheMode="Required"
    mc:Ignorable="d">

    <Page.Resources>
        <CornerRadius x:Key="DetailsLayoutThumbnailCornerRadius">2</CornerRadius>
    </Page.Resources>

    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid
            x:Name="Toolbar"
            Grid.Row="0"
            Background="Transparent"
            RightTapped="Toolbar_RightTapped"
            DoubleTapped="Toolbar_DoubleTapped">
            <StackPanel Canvas.ZIndex="1" HorizontalAlignment="Center" Orientation="Horizontal">
                <Grid
                    Height="28"
                    Width="28"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch">
                    <Image
                        Width="20" 
                        Height="20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Source="{x:Bind ViewModel.ImageSource, Mode=OneWay}"/>
                    <ProgressRing
                        Width="20" 
                        Height="20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsActive="{x:Bind ViewModel.LoadingIndicatorStatus, Mode=OneWay}" />
                </Grid>
                
                <TextBlock
                    Height="28"
                    Text="{x:Bind ViewModel.Header, Mode=OneWay}"
                    VerticalAlignment="Center"
                    Style="{ThemeResource BodyTextStyle}"
                    ToolTipService.ToolTip="{x:Bind ViewModel.ToolTipText}"/>
            </StackPanel>
            <Grid Margin="12,0" Canvas.ZIndex="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Button
                    x:Name="NavigateBack"
                    Grid.Column="0"
                    Height="34"
                    Width="34"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Visibility="{x:Bind ViewModel.AllowNavigation, Mode=OneWay}"
                    Click="NavigateBack_Click"
                    IsEnabled="{x:Bind ViewModel.CanGoBack, Mode=OneWay}">
                    <FontIcon FontSize="12" Glyph="&#xE72B;" />
                </Button>
                <Button
                    x:Name="NavigateUp"
                    Grid.Column="1"
                    Height="34"
                    Width="34"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Visibility="{x:Bind ViewModel.AllowNavigation, Mode=OneWay}"
                    Click="NavigateUp_Click"
                    IsEnabled="{x:Bind ViewModel.CanNavigateToParent, Mode=OneWay}">
                    <FontIcon FontSize="12" Glyph="&#xE74A;" />
                </Button>
                <Button
                    x:Name="NavigateRefresh"
                    Grid.Column="2"
                    Height="34"
                    Width="34"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Click="NavigateRefresh_Click"
                    IsEnabled="{x:Bind ViewModel.CanRefresh, Mode=OneWay}">
                    <FontIcon FontSize="12" Glyph="&#xE72C;" />
                </Button>
                <Button
                    Grid.Column="4"
                    Height="34"
                    Width="34"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    IsEnabled="False">
                    <FontIcon FontSize="12" Glyph="&#xE712;" />
                </Button>
            </Grid>
        </Grid>

        <ScrollViewer x:Name="MainScrollViewer" Grid.Row="1">
            <ListView
				x:Name="FileList"
				Padding="0,0,0,12"
				HorizontalAlignment="Stretch"
                ContainerContentChanging="FileList_ContainerContentChanging"
				VerticalContentAlignment="Stretch"
				ScrollViewer.HorizontalScrollBarVisibility="Auto"
				ScrollViewer.HorizontalScrollMode="Auto"
                ItemsSource="{x:Bind ViewModel.CollectionViewSource.View, Mode=OneWay}"
                IsDoubleTapEnabled="True"
                DoubleTapped="FileList_DoubleTapped"
                IsTapEnabled="True"
                Tapped="FileList_ItemTapped"
                SelectionMode="Extended"
                SelectionChanged="FileList_SelectionChanged">

                <!--  Item Template  -->
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="models:ListedItem">
                        <UserControl>
                            <StackPanel
								HorizontalAlignment="Stretch"
								IsRightTapEnabled="True"
                                Loaded="StackPanel_Loaded"
								Orientation="Horizontal">

                                <!--  Item Thumbnail  -->
                                <Grid
				                    Width="24"
				                    HorizontalAlignment="Left"
				                    VerticalAlignment="Stretch">

                                    <!--  Thumbnail  -->
                                    <Grid
								        x:Name="IconBox"
								        Width="20"
								        Height="Auto"
								        HorizontalAlignment="Center"
								        VerticalAlignment="Center"
								        Opacity="{x:Bind Opacity, Mode=OneWay}"
								        TabFocusNavigation="Local"
								        Tag="ItemImage">
                                        <ContentPresenter
									        x:Name="PicturePresenter"
									        Width="20"
									        Height="20"
									        HorizontalAlignment="Center"
									        VerticalAlignment="Center"
									        x:Load="{x:Bind LoadFileIcon, Mode=OneWay}"
									        CornerRadius="{StaticResource DetailsLayoutThumbnailCornerRadius}">
                                            <Image
										        x:Name="Picture"
										        Source="{x:Bind FileImage, Mode=OneWay}"
										        Stretch="Uniform" />
                                        </ContentPresenter>
                                        <Border
									        x:Name="TypeUnknownGlyph"
									        Width="20"
									        Height="20"
									        HorizontalAlignment="Stretch"
									        VerticalAlignment="Stretch"
									        x:Load="{x:Bind NeedsPlaceholderGlyph, Mode=OneWay}"
									        CornerRadius="4" />
                                        <!-- ="{ThemeResource SystemChromeHighColor}" -->
                                        <FontIcon
									        x:Name="WebShortcutGlyph"
									        x:Load="{x:Bind LoadWebShortcutGlyph, Mode=OneWay}"
									        Glyph="&#xE71B;" />
                                        <Image
									        x:Name="IconOverlay"
									        Width="16"
									        Height="16"
									        Margin="2"
									        HorizontalAlignment="Left"
									        VerticalAlignment="Bottom"
									        x:Load="True"
									        Source="{x:Bind IconOverlay, Mode=OneWay}"
									        Stretch="Uniform" />
                                        <!-- <Border
									        x:Name="ShortcutGlyphElement"
									        HorizontalAlignment="Left"
									        VerticalAlignment="Bottom"
									        x:Load="{x:Bind IsShortcut}">
                                            <uc:OpacityIcon Style="{StaticResource ColorIconShortcut}" />
                                        </Border>
                                        <Image
									        x:Name="ShieldOverlay"
									        Width="8"
									        Height="8"
									        HorizontalAlignment="Right"
									        VerticalAlignment="Bottom"
									        x:Load="{x:Bind IsElevated}"
									        Source="{x:Bind ShieldIcon, Mode=OneWay}"
									        Stretch="Uniform" /> -->
                                    </Grid>

                                    <!--  Selection Check Box  -->
                                    <CheckBox
								        x:Name="SelectionCheckbox"
								        Width="20"
								        MinWidth="0"
								        HorizontalAlignment="Center"
								        Checked="ItemSelected_Checked"
                                        Unchecked="ItemSelected_Unchecked"
								        Opacity="0"/>
                                    <!-- DoubleTapped="SelectionCheckbox_DoubleTapped" -->

                                </Grid>

                                <!--  Item Name  -->
                                <Grid
				                    Padding="12,0,0,0"
				                    HorizontalAlignment="Stretch"
				                    VerticalAlignment="Center"
				                    Canvas.ZIndex="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
								        x:Name="ItemName"
								        Padding="6,0,0,0"
								        VerticalAlignment="Center"
								        Opacity="{x:Bind Opacity, Mode=OneWay}"
								        Text="{x:Bind Name, Mode=OneWay}"
								        TextTrimming="CharacterEllipsis" />
                                    <!-- 
								        DataContextChanged="TextBlock_DataContextChanged"
								        IsTextTrimmedChanged="TextBlock_IsTextTrimmedChanged" -->

                                    <TextBox
								        x:Name="ItemNameTextBox"
								        HorizontalAlignment="Left"
								        VerticalAlignment="Center"
								        BeforeTextChanging="ItemNameTextBox_BeforeTextChanging"
								        Visibility="Collapsed">
                                        <TextBox.Resources>
                                            <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="{ThemeResource SolidBackgroundFillColorSecondary}" />
                                        </TextBox.Resources>
                                    </TextBox>
                                    <!-- MaxWidth="{Binding MaxWidthForRenameTextbox, ElementName=PageRoot, Mode=OneWay}" -->

                                </Grid>

                                <!--  Item Modified Date  -->
                                <!--  <TextBlock
				                    x:Name="ItemDateModified"
				                    Width="{Binding ColumnsViewModel.DateModifiedColumn.LengthIncludingGridSplitter.Value, ElementName=PageRoot, Mode=OneWay}"
				                    Padding="10,0,0,0"
				                    HorizontalAlignment="Stretch"
				                    VerticalAlignment="Center"
				                    DataContextChanged="TextBlock_DataContextChanged"
				                    IsTextTrimmedChanged="TextBlock_IsTextTrimmedChanged"
				                    Style="{StaticResource ColumnContentTextBlock}"
				                    Text="{x:Bind ItemDateModified, Mode=OneWay}"
				                    Visibility="{Binding ColumnsViewModel.DateModifiedColumn.Visibility, ElementName=PageRoot, Mode=OneWay}" /> -->

                                <!--  Item Created Date  -->
                                <!--  <TextBlock
				                    x:Name="ItemDateCreated"
				                    Width="{Binding ColumnsViewModel.DateCreatedColumn.LengthIncludingGridSplitter.Value, ElementName=PageRoot, Mode=OneWay}"
				                    Padding="10,0,0,0"
				                    HorizontalAlignment="Stretch"
				                    VerticalAlignment="Center"
				                    DataContextChanged="TextBlock_DataContextChanged"
				                    IsTextTrimmedChanged="TextBlock_IsTextTrimmedChanged"
				                    Style="{StaticResource ColumnContentTextBlock}"
				                    Text="{x:Bind ItemDateCreated, Mode=OneWay}"
				                    Visibility="{Binding ColumnsViewModel.DateCreatedColumn.Visibility, ElementName=PageRoot, Mode=OneWay}" />  -->
                                
                                <!--  Item Type  -->
                                <!--  <TextBlock
				                    x:Name="ItemType"
				                    Width="{Binding ColumnsViewModel.ItemTypeColumn.LengthIncludingGridSplitter.Value, ElementName=PageRoot, Mode=OneWay}"
				                    Padding="10,0,0,0"
				                    HorizontalAlignment="Stretch"
				                    VerticalAlignment="Center"
				                    DataContextChanged="TextBlock_DataContextChanged"
				                    IsTextTrimmedChanged="TextBlock_IsTextTrimmedChanged"
				                    Style="{StaticResource ColumnContentTextBlock}"
				                    Text="{x:Bind ItemType, Mode=OneWay}"
				                    Visibility="{Binding ColumnsViewModel.ItemTypeColumn.Visibility, ElementName=PageRoot, Mode=OneWay}" />  -->

                                <!--  Item Size  -->
                                <!--  <TextBlock
				                    x:Name="ItemSize"
				                    Width="{Binding ColumnsViewModel.SizeColumn.LengthIncludingGridSplitter.Value, ElementName=PageRoot, Mode=OneWay}"
				                    Padding="10,0,0,0"
				                    HorizontalAlignment="Stretch"
				                    VerticalAlignment="Center"
				                    DataContextChanged="TextBlock_DataContextChanged"
				                    IsTextTrimmedChanged="TextBlock_IsTextTrimmedChanged"
				                    Style="{StaticResource ColumnContentTextBlock}"
				                    Text="{x:Bind FileSize, Mode=OneWay}"
				                    Visibility="{Binding ColumnsViewModel.SizeColumn.Visibility, ElementName=PageRoot, Mode=OneWay}" />  -->

                                <!--  Item Sync Status Badge  -->
                                <!--  <Border
				                    x:Name="ItemStatus"
				                    Width="{Binding ColumnsViewModel.StatusColumn.LengthIncludingGridSplitter.Value, ElementName=PageRoot, Mode=OneWay}"
				                    Padding="10,0,0,0"
				                    HorizontalAlignment="Stretch"
				                    VerticalAlignment="Center"
				                    AutomationProperties.Name="{x:Bind SyncStatusString, Mode=OneWay}"
				                    Visibility="{Binding ColumnsViewModel.StatusColumn.Visibility, ElementName=PageRoot, Mode=OneWay}">
                                    <uc:OpacityIcon
								    Width="16"
								    Height="16"
								    HorizontalAlignment="Left"
								    Style="{x:Bind SyncStatusUI.OpacityIcon, Mode=OneWay}" />
                                </Border> -->

                                <!--  Visual Status Managing  -->
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckboxVisibilityStates">
                                        <VisualState x:Name="HideCheckbox" />
                                        <VisualState x:Name="ShowCheckbox">
                                            <VisualState.Setters>
                                                <Setter Target="SelectionCheckbox.Opacity" Value="1" />
                                                <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </StackPanel>
                        </UserControl>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>
    </Grid>
</files:BaseLayoutPage>
