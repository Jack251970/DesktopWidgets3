<Page
    x:Class="DesktopWidgets3.Views.Pages.Widgets.Settings.FolderViewSettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:Files.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:datamodels="using:Files.App.Data.Models"
    xmlns:local="using:Files.App.UserControls.Settings"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:settings="using:DesktopWidgets3.ViewModels.Pages.Widgets.Settings"
    xmlns:behaviors="using:DesktopWidgets3.Behaviors"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    xmlns:helpers="using:Files.App.Helpers"
    xmlns:wctconverters="using:CommunityToolkit.WinUI.UI.Converters"
    d:DataContext="{d:DesignInstance Type=settings:FolderViewSettingsViewModel}"
    behaviors:NavigationViewHeaderBehavior.HeaderContext="Widget_FolderView_Label"
    NavigationCacheMode="Required"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <wctconverters:BoolToVisibilityConverter
			    x:Key="BoolVisibilityConverter"
			    FalseValue="Collapsed"
			    TrueValue="Visible" />
            <wctconverters:BoolToVisibilityConverter
			    x:Key="InvertedBoolVisibilityConverter"
			    FalseValue="Visible"
			    TrueValue="Collapsed" />
            <wctconverters:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters:StringToBrushConverter x:Key="StringToBrushConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="ContentArea">
        <ScrollViewer 
            IsTabStop="False"
            UseSystemFocusVisuals="False"
            VerticalScrollBarVisibility="Hidden"
            VerticalScrollMode="Auto">
            <StackPanel Spacing="{StaticResource SettingsCardSpacing}">
                <labs:SettingsCard x:Uid="WidgetSettings_FolderPath_Card">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE838;" />
                    </labs:SettingsCard.HeaderIcon>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock 
                            Text="{x:Bind ViewModel.FolderPath, Mode=OneWay}"
                            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                            IsTextSelectionEnabled="True"
                            TextWrapping="Wrap"
                            VerticalAlignment="Center"
                            Margin="0,0,8,0"/>
                        <Button
                            Style="{StaticResource SettingsCardButton}"
                            Command="{x:Bind ViewModel.SelectFolderPathCommand}">
                            <FontIcon FontSize="14" Glyph="&#xe8da;" />
                        </Button>
                    </StackPanel>
                </labs:SettingsCard>

                <labs:SettingsCard x:Uid="WidgetSettings_AllowNavigation_Card">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE8DA;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.AllowNavigation, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Overflow Options  -->
                <labs:SettingsCard Header="{helpers:ResourceString Name=SettingsContextMenuOverflow}">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE712;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.MoveShellExtensionsToSubMenu, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Folder Overrides  -->
                <labs:SettingsCard Header="{helpers:ResourceString Name=SyncFolderPreferencesAcrossDirectories}">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE621;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.SyncFolderPreferencesAcrossDirectories, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Hidden Items  -->
                <labs:SettingsExpander Header="{helpers:ResourceString Name=HiddenItems}">
                    <labs:SettingsExpander.HeaderIcon>
                        <FontIcon Glyph="&#xED1A;" />
                    </labs:SettingsExpander.HeaderIcon>
                    <labs:SettingsExpander.Items>
                        <!--  Hidden Files  -->
                        <labs:SettingsCard Header="{helpers:ResourceString Name=SettingsFilesAndFoldersShowHiddenItems}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.ShowHiddenItems, Mode=TwoWay}" />
                        </labs:SettingsCard>

                        <!--  Dots Files  -->
                        <labs:SettingsCard Header="{helpers:ResourceString Name=ShowDotFiles}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.ShowDotFiles, Mode=TwoWay}" />
                        </labs:SettingsCard>

                        <!--  System Files  -->
                        <labs:SettingsCard Header="{helpers:ResourceString Name=ShowProtectedSystemFiles}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.ShowProtectedSystemFiles, Mode=TwoWay}" />
                        </labs:SettingsCard>

                        <!--  Alternate Data Streams  -->
                        <labs:SettingsCard Header="{helpers:ResourceString Name=ShowAlternateStreams}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AreAlternateStreamsVisible, Mode=TwoWay}" />
                        </labs:SettingsCard>
                    </labs:SettingsExpander.Items>
                </labs:SettingsExpander>

                <!--  File Extensions  -->
                <labs:SettingsCard x:Uid="WidgetSettings_ShowFileExtensions_Card">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE8F9;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.ShowFileExtensions, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Show Thumbnails  -->
                <labs:SettingsCard x:Uid="WidgetSettings_ShowThumbnails_Card">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE91B;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.ShowThumbnails, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Show Checkboxes When Selecting Items  -->
                <labs:SettingsCard Header="{helpers:ResourceString Name=ShowCheckboxesWhenSelectingItems}">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE73A;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.ShowCheckboxesWhenSelectingItems, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Confirm Delete  -->
                <labs:SettingsCard Header="{helpers:ResourceString Name=ShowConfirmationWhenDeletingItems}">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE74D;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ComboBox SelectedIndex="{x:Bind ViewModel.SelectedDeleteConfirmationPolicyIndex, Mode=TwoWay}">
                        <ComboBoxItem Content="{helpers:ResourceString Name=Always}" />
                        <ComboBoxItem Content="{helpers:ResourceString Name=PermanentDeletionOnly}" />
                        <ComboBoxItem Content="{helpers:ResourceString Name=Never}" />
                    </ComboBox>
                </labs:SettingsCard>

                <!--  File Extension Warning  -->
                <labs:SettingsCard Header="{helpers:ResourceString Name=ShowFileExtensionWarning}">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE8AC;" />
                    </labs:SettingsCard.HeaderIcon>
                    <ToggleSwitch IsOn="{x:Bind ViewModel.ShowFileExtensionWarning, Mode=TwoWay}" />
                </labs:SettingsCard>

                <!--  Edit Tags  -->
                <local:SettingsBlockControl
	                Title="{helpers:ResourceString Name=FileTags}"
	                HorizontalAlignment="Stretch"
	                IsExpanded="True">
                    <local:SettingsBlockControl.Icon>
                        <FontIcon Glyph="&#xE8EC;" />
                    </local:SettingsBlockControl.Icon>

                    <Button Command="{x:Bind ViewModel.TagsViewModel.AddTagCommand, Mode=OneWay}" Content="{helpers:ResourceString Name=NewTag}" />
                    <local:SettingsBlockControl.ExpandableContent>
                        <StackPanel>
                            <!--  Create new tag  -->
                            <Grid
				                x:Name="AddTagGrid"
				                Padding="32,12"
				                x:Load="{x:Bind ViewModel.TagsViewModel.IsCreatingNewTag, Mode=OneWay}"
				                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
				                BorderBrush="{ThemeResource ControlElevationBorderBrush}"
				                BorderThickness="0,0,0,1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel
					                Grid.Column="0"
					                Orientation="Horizontal"
					                Spacing="12">
                                    <!--  Title  -->
                                    <TextBlock VerticalAlignment="Center" Text="{helpers:ResourceString Name=CreateNewTag}" />

                                    <!--  Tag Name  -->
                                    <TextBox
						                Width="200"
						                PlaceholderText="{helpers:ResourceString Name=Name}"
						                TextChanged="NewTagTextBox_TextChanged" />

                                    <!--  Tag Color  -->
                                    <Button
						                Margin="8,0"
						                Padding="0"
						                AutomationProperties.Name="{helpers:ResourceString Name=TagColor}">
                                        <StackPanel Orientation="Horizontal">
                                            <Border
								                Width="20"
								                Height="20"
								                Margin="4"
								                Background="{x:Bind ViewModel.TagsViewModel.NewTag.Color, Mode=OneWay}"
								                CornerRadius="4" />
                                            <FontIcon
								                Margin="8,4,10,4"
								                FontSize="12"
								                Glyph="&#xE70D;" />
                                        </StackPanel>
                                        <Button.Flyout>
                                            <Flyout>
                                                <controls:ColorPicker Color="{x:Bind ViewModel.TagsViewModel.NewTag.Color, Mode=TwoWay}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>
                                </StackPanel>

                                <StackPanel
					                Grid.Column="1"
					                HorizontalAlignment="Right"
					                Orientation="Horizontal"
					                Spacing="12">
                                    <!--  Invalid Name Warning  -->
                                    <Grid
						                Padding="12,4"
						                VerticalAlignment="Stretch"
						                Background="{ThemeResource SystemFillColorCriticalBackgroundBrush}"
						                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
						                BorderThickness="1"
						                ColumnSpacing="8"
						                CornerRadius="4"
						                ToolTipService.ToolTip="{helpers:ResourceString Name=TagNameRules}"
						                Visibility="{x:Bind ViewModel.TagsViewModel.NewTag.IsNameValid, Mode=OneWay, Converter={StaticResource InvertedBoolVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
							                VerticalAlignment="Center"
							                AutomationProperties.AccessibilityView="Raw"
							                FontFamily="{ThemeResource SymbolThemeFontFamily}"
							                FontSize="{StaticResource InfoBarIconFontSize}"
							                Foreground="{ThemeResource InfoBarErrorSeverityIconBackground}"
							                Text="{StaticResource InfoBarIconBackgroundGlyph}" />
                                        <TextBlock
							                VerticalAlignment="Center"
							                AutomationProperties.AccessibilityView="Raw"
							                FontFamily="{ThemeResource SymbolThemeFontFamily}"
							                FontSize="{StaticResource InfoBarIconFontSize}"
							                Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}"
							                Text="{StaticResource InfoBarErrorIconGlyph}" />
                                        <TextBlock
							                Grid.Column="1"
							                VerticalAlignment="Center"
							                Text="{helpers:ResourceString Name=InvalidTagNameWarning}" />
                                    </Grid>

                                    <!--  Cancel  -->
                                    <Button Command="{x:Bind ViewModel.TagsViewModel.CancelNewTagCommand, Mode=OneWay}" Content="{helpers:ResourceString Name=Cancel}" />

                                    <!--  Save Changes  -->
                                    <Button
						                Command="{x:Bind ViewModel.TagsViewModel.SaveNewTagCommand, Mode=OneWay}"
						                Content="{helpers:ResourceString Name=Create}"
						                IsEnabled="{x:Bind ViewModel.TagsViewModel.NewTag.CanCommit, Mode=OneWay}"
						                Style="{StaticResource AccentButtonStyle}" />
                                </StackPanel>
                            </Grid>

                            <ListView
				                x:Name="TagsList"
				                MaxHeight="500"
				                Padding="12"
				                HorizontalAlignment="Stretch"
				                AllowDrop="True"
				                CanReorderItems="{x:Bind AllowItemsDrag, Mode=OneWay}"
				                IsItemClickEnabled="True"
				                ItemsSource="{x:Bind ViewModel.TagsViewModel.Tags, Mode=TwoWay}"
				                ReorderMode="Enabled"
				                SelectionMode="None">
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="datamodels:ListedTagViewModel">
                                        <Grid ColumnSpacing="16">
                                            <Grid.KeyboardAccelerators>
                                                <KeyboardAccelerator Key="Escape" Invoked="KeyboardAccelerator_Invoked" />
                                            </Grid.KeyboardAccelerators>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel
								                Height="24"
								                HorizontalAlignment="Left"
								                VerticalAlignment="Center"
								                Orientation="Horizontal"
								                Spacing="8"
								                ToolTipService.ToolTip="{x:Bind Tag.Name}">
                                                <PathIcon
									                VerticalAlignment="Center"
									                Data="{StaticResource ColorIconFilledTag}"
									                Foreground="{x:Bind NewColor, Mode=OneWay, Converter={StaticResource StringToBrushConverter}}" />
                                                <TextBlock
									                x:Name="TagName"
									                MaxWidth="200"
									                VerticalAlignment="Center"
									                LineHeight="18"
									                Text="{x:Bind Tag.Name}"
									                TextTrimming="CharacterEllipsis" />
                                            </StackPanel>

                                            <StackPanel
								                Grid.Column="1"
								                Orientation="Horizontal"
								                Spacing="8"
								                Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
                                                <TextBox
									                x:Name="TagNameTextBox"
									                Width="200"
									                VerticalAlignment="Center"
									                KeyDown="RenameTextBox_KeyDown"
									                Text="{x:Bind NewName, Mode=TwoWay}"
									                Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
                                                    <TextBox.Resources>
                                                        <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="{ThemeResource SolidBackgroundFillColorSecondary}" />
                                                    </TextBox.Resources>
                                                </TextBox>

                                                <Button
									                Margin="8,0"
									                Padding="0"
									                AutomationProperties.Name="{helpers:ResourceString Name=TagColor}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Border
											                Width="20"
											                Height="20"
											                Margin="4"
											                Background="{x:Bind NewColor, Mode=OneWay}"
											                CornerRadius="4" />
                                                        <FontIcon
											                Margin="8,4,10,4"
											                FontSize="12"
											                Glyph="&#xE70D;" />
                                                    </StackPanel>
                                                    <Button.Flyout>
                                                        <Flyout>
                                                            <controls:ColorPicker ColorChanged="EditColorPicker_ColorChanged" Color="{x:Bind NewColor, Mode=TwoWay}" />
                                                        </Flyout>
                                                    </Button.Flyout>
                                                </Button>
                                            </StackPanel>

                                            <StackPanel
								                Grid.Column="2"
								                Orientation="Horizontal"
								                Visibility="{x:Bind IsEditing, Converter={StaticResource InvertedBoolVisibilityConverter}, Mode=OneWay}">
                                                <Button
									                x:Name="EditTagButton"
									                Padding="8,4"
									                Background="Transparent"
									                BorderBrush="Transparent"
									                Click="EditTag_Click"
									                Content="{helpers:ResourceString Name=Edit}" />

                                                <Button
									                x:Name="DeleteTagButton"
									                Padding="8,4"
									                Background="Transparent"
									                BorderBrush="Transparent"
									                Click="PreRemoveTag_Click"
									                Content="{helpers:ResourceString Name=Delete}">
                                                    <Button.Flyout>
                                                        <Flyout>
                                                            <StackPanel Spacing="12">
                                                                <TextBlock
													                MaxWidth="150"
													                Text="{helpers:ResourceString Name=ConfirmDeleteTag}"
													                TextAlignment="Center"
													                TextWrapping="Wrap" />
                                                                <StackPanel
													                HorizontalAlignment="Center"
													                Orientation="Horizontal"
													                Spacing="8">
                                                                    <Button Click="CancelRemoveTag_Click" Content="{helpers:ResourceString Name=Cancel}" />

                                                                    <Button
														                Background="{ThemeResource SystemFillColorCriticalBackgroundBrush}"
														                BorderBrush="Transparent"
														                Click="RemoveTag_Click"
														                Content="{helpers:ResourceString Name=Delete}" />
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </Flyout>
                                                    </Button.Flyout>
                                                </Button>
                                            </StackPanel>

                                            <StackPanel
								                Grid.Column="2"
								                Orientation="Horizontal"
								                Spacing="12"
								                Visibility="{x:Bind IsEditing, Converter={StaticResource BoolVisibilityConverter}, Mode=OneWay}">
                                                <Grid
									                Padding="12,4"
									                VerticalAlignment="Stretch"
									                Background="{ThemeResource SystemFillColorCriticalBackgroundBrush}"
									                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
									                BorderThickness="1"
									                ColumnSpacing="8"
									                CornerRadius="4"
									                ToolTipService.ToolTip="{helpers:ResourceString Name=TagNameRules}"
									                Visibility="{x:Bind IsNameValid, Mode=OneWay, Converter={StaticResource InvertedBoolVisibilityConverter}}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock
										                VerticalAlignment="Center"
										                AutomationProperties.AccessibilityView="Raw"
										                FontFamily="{ThemeResource SymbolThemeFontFamily}"
										                FontSize="{StaticResource InfoBarIconFontSize}"
										                Foreground="{ThemeResource InfoBarErrorSeverityIconBackground}"
										                Text="{StaticResource InfoBarIconBackgroundGlyph}" />
                                                    <TextBlock
										                VerticalAlignment="Center"
										                FontFamily="{ThemeResource SymbolThemeFontFamily}"
										                FontSize="{StaticResource InfoBarIconFontSize}"
										                Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}"
										                Text="{StaticResource InfoBarErrorIconGlyph}" />
                                                    <TextBlock
										                Grid.Column="1"
										                VerticalAlignment="Center"
										                Text="{helpers:ResourceString Name=InvalidTagNameWarning}" />
                                                </Grid>

                                                <Button
									                x:Name="CancelChangesButton"
									                Click="CancelRenameTag_Click"
									                Content="{helpers:ResourceString Name=Cancel}" />

                                                <Button
									                x:Name="SaveChangesButton"
									                Click="CommitRenameTag_Click"
									                Content="{helpers:ResourceString Name=Save}"
									                IsEnabled="{x:Bind CanCommit, Mode=OneWay}"
									                Style="{StaticResource AccentButtonStyle}" />
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </StackPanel>
                    </local:SettingsBlockControl.ExpandableContent>
                </local:SettingsBlockControl>

                <!--  App Info  -->
                <labs:SettingsCard
                    Header="{x:Bind ViewModel.AboutViewModel.AppName}"
	                Description="{x:Bind ViewModel.AboutViewModel.Version}">
                    <labs:SettingsCard.HeaderIcon>
                        <FontIcon Glyph="&#xE946;" />
                    </labs:SettingsCard.HeaderIcon>
                    <Button x:Name="CopyVersionInfo" Content="{helpers:ResourceString Name=Copy}">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Command="{x:Bind ViewModel.AboutViewModel.CopyAppVersionCommand}" Text="{helpers:ResourceString Name=AppVersion}" />
                                <MenuFlyoutItem Command="{x:Bind ViewModel.AboutViewModel.CopyWindowsVersionCommand}" Text="{helpers:ResourceString Name=WindowsVersion}" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </labs:SettingsCard>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
